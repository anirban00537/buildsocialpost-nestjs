generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique @db.VarChar(255)
  password      String    @db.VarChar(255)
  first_name    String?
  last_name     String?
  user_name     String?   @unique @db.VarChar(255)
  unique_code   String?   @unique @db.VarChar(255)
  phone         String?   @db.VarChar(180)
  photo         String?   @db.VarChar(500)
  country       String?   @db.VarChar(180)
  birth_date    DateTime?
  role          Int       @default(2) @db.SmallInt
  status        Int       @default(0) @db.SmallInt
  is_subscribed Int       @default(0) @db.SmallInt

  email_verified Int       @default(0) @db.SmallInt
  phone_verified Int @default(0) @db.SmallInt
  gender         Int @default(1) @db.SmallInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserTokens            UserTokens[]
  UserVerificationCodes UserVerificationCodes[]
}

model AdminSettings {
  id    Int    @id @default(autoincrement())
  slug  String @unique
  value String @db.Text()
}

model UserTokens {
  id           Int      @id @default(autoincrement())
  userId       Int
  refreshToken String   @db.VarChar(255)
  family       String   @unique
  browserInfo  String?
  expiresAt    DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserVerificationCodes {
  id         Int      @id @default(autoincrement())
  user_id    Int
  code       String   @unique @db.VarChar(10)
  status     Int      @default(0) @db.SmallInt
  type       Int      @default(1) @db.SmallInt
  expired_at DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
